{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/prisma.ts"],"sourcesContent":["import { PrismaClient, Prisma } from '@prisma/client'\r\nimport { withAccelerate } from '@prisma/extension-accelerate'\r\n\r\nconst globalForPrisma = globalThis as unknown as {\r\n  prisma: ReturnType<typeof createPrismaClient> | undefined\r\n}\r\n\r\nfunction createPrismaClient() {\r\n  // Determine log levels based on environment variables\r\n  let devLogs: Prisma.LogLevel[] = ['error']; // Default fallback\r\n  \r\n  if (process.env.NODE_ENV === 'development') {\r\n    if (process.env.PRISMA_LOG_LEVEL === 'verbose') {\r\n      devLogs = ['query', 'warn', 'error'];\r\n      console.log('🔍 Prisma logging: VERBOSE mode (queries + warnings + errors)');\r\n    } else {\r\n      // 'basic' or any other value = no queries, just warnings and errors\r\n      devLogs = ['warn', 'error'];\r\n      console.log('🎯 Prisma logging: BASIC mode (warnings + errors only)');\r\n    }\r\n  } else {\r\n    console.log('🛡️ Prisma logging: PRODUCTION mode (errors only)');\r\n  }\r\n\r\n  return new PrismaClient({\r\n    log: devLogs,\r\n  }).$extends(withAccelerate())\r\n}\r\n\r\nexport const prisma = globalForPrisma.prisma ?? createPrismaClient()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma\r\n"],"names":[],"mappings":";;;;;;;;AAGA,MAAM,kBAAkB;AAIxB,SAAS;IACP,sDAAsD;IACtD,IAAI,UAA6B;QAAC;KAAQ,EAAE,mBAAmB;IAE/D,wCAA4C;QAC1C,IAAI,QAAQ,GAAG,CAAC,gBAAgB,KAAK,WAAW;YAC9C,UAAU;gBAAC;gBAAS;gBAAQ;aAAQ;YACpC,QAAQ,GAAG,CAAC;QACd,OAAO;YACL,oEAAoE;YACpE,UAAU;gBAAC;gBAAQ;aAAQ;YAC3B,QAAQ,GAAG,CAAC;QACd;IACF;;;IAIA,OAAO,IAAI,6IAAA,CAAA,eAAY,CAAC;QACtB,KAAK;IACP,GAAG,QAAQ,CAAC,CAAA,GAAA,oKAAA,CAAA,iBAAc,AAAD;AAC3B;AAEO,MAAM,SAAS,gBAAgB,MAAM,IAAI;AAEhD,wCAA2C,gBAAgB,MAAM,GAAG"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/auth.ts"],"sourcesContent":["import NextAuth, { type NextAuthConfig } from 'next-auth'\r\nimport CredentialsProvider from 'next-auth/providers/credentials'\r\nimport bcrypt from 'bcryptjs'\r\n\r\n// Base configuration that works with JWT sessions and Edge Runtime\r\nconst baseConfig: NextAuthConfig = {\r\n  providers: [\r\n    CredentialsProvider({\r\n      name: 'credentials',\r\n      credentials: {\r\n        email: { label: 'Email', type: 'email' },\r\n        password: { label: 'Password', type: 'password' }\r\n      },\r\n      async authorize(credentials) {\r\n        // Import prisma only when needed (in Node.js runtime)\r\n        if (typeof window !== 'undefined') return null\r\n        \r\n        try {\r\n          const { prisma } = await import('./prisma')\r\n          \r\n          if (!credentials?.email || !credentials?.password) {\r\n            return null\r\n          }\r\n\r\n          const user = await prisma.user.findUnique({\r\n            where: {\r\n              email: credentials.email as string\r\n            }\r\n          })\r\n\r\n          if (!user) {\r\n            return null\r\n          }\r\n\r\n          const isPasswordValid = await bcrypt.compare(\r\n            credentials.password as string,\r\n            user.password\r\n          )\r\n\r\n          if (!isPasswordValid) {\r\n            return null\r\n          }\r\n\r\n          return {\r\n            id: user.id,\r\n            email: user.email,\r\n            name: user.name,\r\n          }\r\n        } catch (error) {\r\n          console.error('Auth error:', error)\r\n          return null\r\n        }\r\n      }\r\n    })\r\n  ],\r\n  session: {\r\n    strategy: 'jwt',\r\n    maxAge: 30 * 24 * 60 * 60, // 30 days\r\n    updateAge: 24 * 60 * 60, // 24 hours\r\n  },\r\n  jwt: {\r\n    maxAge: 30 * 24 * 60 * 60, // 30 days\r\n  },\r\n  pages: {\r\n    signIn: '/login',\r\n    signOut: '/login'\r\n  },\r\n  callbacks: {\r\n    async jwt({ token, user }) {\r\n      if (user) {\r\n        return {\r\n          ...token,\r\n          id: user.id\r\n        }\r\n      }\r\n      return token\r\n    },\r\n    async session({ session, token }) {\r\n      return {\r\n        ...session,\r\n        user: {\r\n          ...session.user,\r\n          id: token.id as string\r\n        }\r\n      }\r\n    }\r\n  },\r\n  events: {\r\n    async signOut() {\r\n      // You can add additional cleanup logic here if needed\r\n      console.log('User signed out')\r\n    }\r\n  }\r\n}\r\n\r\nexport const { handlers, auth, signIn, signOut } = NextAuth(baseConfig)\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIA,mEAAmE;AACnE,MAAM,aAA6B;IACjC,WAAW;QACT,CAAA,GAAA,0JAAA,CAAA,UAAmB,AAAD,EAAE;YAClB,MAAM;YACN,aAAa;gBACX,OAAO;oBAAE,OAAO;oBAAS,MAAM;gBAAQ;gBACvC,UAAU;oBAAE,OAAO;oBAAY,MAAM;gBAAW;YAClD;YACA,MAAM,WAAU,WAAW;gBACzB,sDAAsD;gBACtD,IAAI,OAAO,WAAW,aAAa,OAAO;gBAE1C,IAAI;oBACF,MAAM,EAAE,MAAM,EAAE,GAAG;oBAEnB,IAAI,CAAC,aAAa,SAAS,CAAC,aAAa,UAAU;wBACjD,OAAO;oBACT;oBAEA,MAAM,OAAO,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC;wBACxC,OAAO;4BACL,OAAO,YAAY,KAAK;wBAC1B;oBACF;oBAEA,IAAI,CAAC,MAAM;wBACT,OAAO;oBACT;oBAEA,MAAM,kBAAkB,MAAM,iIAAA,CAAA,UAAM,CAAC,OAAO,CAC1C,YAAY,QAAQ,EACpB,KAAK,QAAQ;oBAGf,IAAI,CAAC,iBAAiB;wBACpB,OAAO;oBACT;oBAEA,OAAO;wBACL,IAAI,KAAK,EAAE;wBACX,OAAO,KAAK,KAAK;wBACjB,MAAM,KAAK,IAAI;oBACjB;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,eAAe;oBAC7B,OAAO;gBACT;YACF;QACF;KACD;IACD,SAAS;QACP,UAAU;QACV,QAAQ,KAAK,KAAK,KAAK;QACvB,WAAW,KAAK,KAAK;IACvB;IACA,KAAK;QACH,QAAQ,KAAK,KAAK,KAAK;IACzB;IACA,OAAO;QACL,QAAQ;QACR,SAAS;IACX;IACA,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,OAAO;oBACL,GAAG,KAAK;oBACR,IAAI,KAAK,EAAE;gBACb;YACF;YACA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,OAAO;gBACL,GAAG,OAAO;gBACV,MAAM;oBACJ,GAAG,QAAQ,IAAI;oBACf,IAAI,MAAM,EAAE;gBACd;YACF;QACF;IACF;IACA,QAAQ;QACN,MAAM;YACJ,sDAAsD;YACtD,QAAQ,GAAG,CAAC;QACd;IACF;AACF;AAEO,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { auth } from '@/lib/auth'\r\n\r\nexport default auth((req) => {\r\n  const { pathname } = req.nextUrl\r\n\r\n  // Public routes that don't require authentication\r\n  const publicRoutes = ['/login', '/register', '/']\r\n  const isPublicRoute = publicRoutes.includes(pathname)\r\n  \r\n  // If user is authenticated and trying to access login/register, redirect to dashboard\r\n  if (req.auth && (pathname === '/login' || pathname === '/register')) {\r\n    return NextResponse.redirect(new URL('/dashboard', req.url))\r\n  }\r\n\r\n  // If user is not authenticated and trying to access protected route, redirect to login\r\n  if (!req.auth && !isPublicRoute && !pathname.startsWith('/api/auth')) {\r\n    const loginUrl = new URL('/login', req.url)\r\n    loginUrl.searchParams.set('callbackUrl', req.url)\r\n    return NextResponse.redirect(loginUrl)\r\n  }\r\n\r\n  // Add security headers for better session protection\r\n  const response = NextResponse.next()\r\n  \r\n  if (req.auth) {\r\n    // Add headers to prevent caching of authenticated pages\r\n    response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate')\r\n    response.headers.set('Pragma', 'no-cache')\r\n    response.headers.set('Expires', '0')\r\n  }\r\n\r\n  return response\r\n})\r\n\r\nexport const config = {\r\n  // Protect all routes except public ones\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api/auth (NextAuth.js routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public folder\r\n     */\r\n    '/((?!api/auth|_next/static|_next/image|favicon.ico|public).*)',\r\n  ],\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;uCAGe,CAAA,GAAA,2GAAA,CAAA,OAAI,AAAD,EAAE,CAAC;IACnB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,OAAO;IAEhC,kDAAkD;IAClD,MAAM,eAAe;QAAC;QAAU;QAAa;KAAI;IACjD,MAAM,gBAAgB,aAAa,QAAQ,CAAC;IAE5C,sFAAsF;IACtF,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,YAAY,aAAa,WAAW,GAAG;QACnE,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,IAAI,GAAG;IAC5D;IAEA,uFAAuF;IACvF,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,UAAU,CAAC,cAAc;QACpE,MAAM,WAAW,IAAI,IAAI,UAAU,IAAI,GAAG;QAC1C,SAAS,YAAY,CAAC,GAAG,CAAC,eAAe,IAAI,GAAG;QAChD,OAAO,qLAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,qDAAqD;IACrD,MAAM,WAAW,qLAAA,CAAA,eAAY,CAAC,IAAI;IAElC,IAAI,IAAI,IAAI,EAAE;QACZ,wDAAwD;QACxD,SAAS,OAAO,CAAC,GAAG,CAAC,iBAAiB;QACtC,SAAS,OAAO,CAAC,GAAG,CAAC,UAAU;QAC/B,SAAS,OAAO,CAAC,GAAG,CAAC,WAAW;IAClC;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,wCAAwC;IACxC,SAAS;QACP;;;;;;;KAOC,GACD;KACD;AACH"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}